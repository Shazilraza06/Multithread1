import java.io.*;
import java.net.*;

public class MultiThreadv1 {
    public static void main(String[] args) throws IOException {
        ServerSocket serverSocket = new ServerSocket(6789);
        System.out.println("Server started on port 6789. Waiting for clients...");

        while (true) {
            Socket clientSocket = serverSocket.accept();
            TCPServerSingleClient t = new TCPServerSingleClient(clientSocket);
            t.start(); 

            try {
                t.join();
            } catch (InterruptedException e) {
                System.out.println("Server interrupted while waiting for client to finish.");
            }
        }
    }
}
class TCPServerSingleClient extends Thread {
    private static int clientCount = 0;  
    private Socket clientSocket;
    private int clientId;

    public TCPServerSingleClient(Socket socket) {
        this.clientSocket = socket;
        clientId = ++clientCount;
    }

    @Override
    public void run() {
        try {
            handleClient();
        } catch (IOException e) {
            System.out.println("Connection error with client " + clientId);
        }
    }

    private void handleClient() throws IOException {
        System.out.println("Client " + clientId + " connected.");

        DataInputStream dis = new DataInputStream(clientSocket.getInputStream());
        DataOutputStream dos = new DataOutputStream(clientSocket.getOutputStream());
        BufferedReader serverInput = new BufferedReader(new InputStreamReader(System.in));
